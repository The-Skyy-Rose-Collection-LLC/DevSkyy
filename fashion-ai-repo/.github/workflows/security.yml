name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 02:00 UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  trivy-scan:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy scan for summary
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH,MEDIUM'

  dependency-audit:
    name: Dependency Vulnerability Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'
          cache: 'pip'

      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip==24.0
          pip install pip-audit==2.6.3

      - name: Run pip-audit
        run: |
          pip-audit --desc --format json --output pip-audit.json || true
          pip-audit --desc

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-audit
          path: pip-audit.json
          retention-days: 90

  bandit-sast:
    name: Bandit SAST Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'

      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip==24.0
          pip install bandit[toml]==1.7.6

      - name: Run Bandit scan
        run: |
          bandit -r src \
            -f json \
            -o bandit-report.json \
            -ll \
            --severity-level medium
        continue-on-error: true

      - name: Display Bandit results
        run: |
          bandit -r src -ll --severity-level medium

      - name: Upload Bandit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-sast
          path: bandit-report.json
          retention-days: 90

  secrets-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@v3.63.7
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['python']

    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  security-gate:
    name: Security Gate
    runs-on: ubuntu-latest
    needs: [trivy-scan, dependency-audit, bandit-sast, secrets-scan, codeql]
    if: always()
    steps:
      - name: Check security status
        run: |
          if [ "${{ needs.trivy-scan.result }}" != "success" ]; then
            echo "❌ Trivy scan failed"
            exit 1
          fi
          if [ "${{ needs.dependency-audit.result }}" != "success" ]; then
            echo "⚠️  Dependency audit completed with findings"
          fi
          if [ "${{ needs.bandit-sast.result }}" != "success" ]; then
            echo "⚠️  Bandit SAST completed with findings"
          fi
          if [ "${{ needs.secrets-scan.result }}" != "success" ]; then
            echo "❌ Secret scan failed"
            exit 1
          fi
          if [ "${{ needs.codeql.result }}" != "success" ]; then
            echo "❌ CodeQL analysis failed"
            exit 1
          fi
          echo "✅ Security gate passed"
