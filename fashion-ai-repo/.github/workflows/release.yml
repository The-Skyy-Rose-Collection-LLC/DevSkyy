name: Release Automation

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

env:
  PYTHON_VERSION: '3.11.9'

jobs:
  validate-tag:
    name: Validate Release Tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Validate version format
        run: |
          if ! [[ "${{ steps.get_version.outputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format. Must be semver (e.g., 1.2.3)"
            exit 1
          fi

  build-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: validate-tag
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip==24.0
          pip install build==1.0.3 twine==4.0.2

      - name: Build package
        run: |
          python -m build

      - name: Verify package
        run: |
          twine check dist/*

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS
          cat SHA256SUMS

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: dist/
          retention-days: 90

  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    needs: validate-tag
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            echo "First release - no previous tag"
            CHANGELOG="Initial release of Fashion AI Repository"
          else
            echo "Generating changelog from $PREV_TAG to $GITHUB_REF_NAME"

            # Generate structured changelog
            CHANGELOG="## What's Changed\n\n"

            # Features
            FEATURES=$(git log $PREV_TAG..HEAD --pretty=format:"- %s" --grep="^feat" | head -20)
            if [ -n "$FEATURES" ]; then
              CHANGELOG="${CHANGELOG}### ✨ Features\n${FEATURES}\n\n"
            fi

            # Fixes
            FIXES=$(git log $PREV_TAG..HEAD --pretty=format:"- %s" --grep="^fix" | head -20)
            if [ -n "$FIXES" ]; then
              CHANGELOG="${CHANGELOG}### 🐛 Fixes\n${FIXES}\n\n"
            fi

            # Security
            SECURITY=$(git log $PREV_TAG..HEAD --pretty=format:"- %s" --grep="^security" | head -10)
            if [ -n "$SECURITY" ]; then
              CHANGELOG="${CHANGELOG}### 🔒 Security\n${SECURITY}\n\n"
            fi

            # All commits count
            COMMIT_COUNT=$(git rev-list $PREV_TAG..HEAD --count)
            CHANGELOG="${CHANGELOG}**Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${GITHUB_REF_NAME}\n"
            CHANGELOG="${CHANGELOG}\n📊 Total commits: ${COMMIT_COUNT}"
          fi

          # Save to file and output
          echo "$CHANGELOG" > changelog.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: changelog.md
          retention-days: 90

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [validate-tag, build-release, generate-changelog]
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ needs.validate-tag.outputs.version }}
          body: ${{ needs.generate-changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            artifacts/release-artifacts/*
            artifacts/changelog/changelog.md
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [create-release]
    if: github.repository_owner == 'The-Skyy-Rose-Collection-LLC'
    environment:
      name: pypi
      url: https://pypi.org/project/fashion-ai-repo/
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          verify_metadata: true
          print_hash: true

  release-notification:
    name: Release Notification
    runs-on: ubuntu-latest
    needs: [create-release, publish-pypi]
    if: always()
    steps:
      - name: Generate summary
        run: |
          echo "## 🎉 Release v${{ needs.validate-tag.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **GitHub Release:** Created" >> $GITHUB_STEP_SUMMARY
          echo "✅ **PyPI:** Published" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Artifacts:** Uploaded" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Changelog:** Generated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release URL:** https://github.com/${{ github.repository }}/releases/tag/${GITHUB_REF_NAME}" >> $GITHUB_STEP_SUMMARY
