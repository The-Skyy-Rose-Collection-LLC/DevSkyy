# DevSkyy Luxury Fashion Automation - Production Dependencies
# Python 3.11+ Required (per CLAUDE.md Truth Protocol)
# All versions pinned for reproducibility

# ============================================================================
# Core Framework (CLAUDE.md Requirement: Specify exact versions)
# ============================================================================
fastapi==0.104.1  # Web framework - https://fastapi.tiangolo.com/
pydantic==2.5.0  # Data validation - https://docs.pydantic.dev/
pydantic-settings==2.1.0  # Settings management
uvicorn[standard]==0.24.0  # ASGI server
python-multipart==0.0.6  # File upload support

# ============================================================================
# Security (CLAUDE.md: Cite RFC 7519 for JWT, NIST SP 800-38D for encryption)
# ============================================================================
# JWT Authentication per RFC 7519: https://tools.ietf.org/html/rfc7519
pyjwt==2.8.0  # JWT implementation
cryptography==41.0.7  # NIST-compliant encryption (AES-256-GCM per NIST SP 800-38D)
passlib[bcrypt]==1.7.4  # Password hashing (Argon2/PBKDF2)
python-jose[cryptography]==3.3.0  # Additional JWT support
bcrypt==4.1.1  # bcrypt for passwords

# ============================================================================
# AI & ML Libraries (Exact versions required)
# ============================================================================
# PyTorch & CUDA
torch==2.1.1  # PyTorch framework
torchvision==0.16.1  # Vision utilities
torchaudio==2.1.1  # Audio utilities

# HuggingFace Ecosystem
transformers==4.35.2  # Transformers library
diffusers==0.24.0  # Diffusion models (SDXL, ControlNet, etc.)
accelerate==0.25.0  # Training acceleration
safetensors==0.4.1  # Safe tensor storage

# Image Processing
pillow==10.1.0  # PIL/Pillow for images
opencv-python==4.8.1.78  # OpenCV for computer vision
imageio==2.33.0  # Image I/O
imageio-ffmpeg==0.4.9  # Video support

# Scientific Computing
numpy==1.26.2  # Arrays and numerical computing
scipy==1.11.4  # Scientific algorithms

# ============================================================================
# Database & Caching
# ============================================================================
sqlalchemy==2.0.23  # ORM for database
alembic==1.13.0  # Database migrations
redis==5.0.1  # Redis client for caching
asyncpg==0.29.0  # PostgreSQL async driver
psycopg2-binary==2.9.9  # PostgreSQL driver

# ============================================================================
# Monitoring & Observability (CLAUDE.md: Prometheus/Grafana integration)
# ============================================================================
prometheus-client==0.19.0  # Prometheus metrics
prometheus-fastapi-instrumentator==6.1.0  # FastAPI integration
python-json-logger==2.0.7  # Structured logging

# ============================================================================
# API Clients & Integrations
# ============================================================================
# AI Model APIs
openai==1.3.7  # OpenAI API (GPT-4, DALL-E)
anthropic==0.7.7  # Anthropic API (Claude)
aiohttp==3.9.1  # Async HTTP client
httpx==0.25.2  # Modern HTTP client

# Cloud Storage
boto3==1.34.8  # AWS SDK
google-cloud-storage==2.10.0  # Google Cloud Storage

# ============================================================================
# Task Queue & Background Jobs
# ============================================================================
celery==5.3.4  # Distributed task queue
redis==5.0.1  # Celery broker

# ============================================================================
# Testing (CLAUDE.md: Unit and integration tests required)
# ============================================================================
pytest==7.4.3  # Testing framework
pytest-asyncio==0.21.1  # Async test support
pytest-cov==4.1.0  # Coverage reporting
pytest-mock==3.12.0  # Mocking utilities
faker==21.0.0  # Test data generation
factory-boy==3.3.0  # Test fixtures

# ============================================================================
# Development & Code Quality
# ============================================================================
black==23.12.1  # Code formatting
flake8==6.1.0  # Linting
mypy==1.7.1  # Type checking
isort==5.13.2  # Import sorting
pre-commit==3.6.0  # Git hooks

# ============================================================================
# Documentation
# ============================================================================
mkdocs==1.5.3  # Documentation generator
mkdocs-material==9.5.2  # Material theme
pdoc3==0.10.0  # API documentation

# ============================================================================
# Utilities
# ============================================================================
python-dotenv==1.0.0  # Environment variables
pyyaml==6.0.1  # YAML parsing
ujson==5.9.0  # Fast JSON
orjson==3.9.10  # Even faster JSON
python-dateutil==2.8.2  # Date utilities
pytz==2023.3  # Timezone support

# ============================================================================
# Additional ML/AI (for complete HuggingFace integration)
# ============================================================================
# Note: Some models require specific versions
sentence-transformers==2.2.2  # Sentence embeddings
tokenizers==0.15.0  # Fast tokenization
datasets==2.15.0  # HuggingFace datasets
huggingface-hub==0.19.4  # Model hub client

# ============================================================================
# Notes & Requirements
# ============================================================================
# Python Version: >=3.11.0,<3.12.0
# CUDA: 11.8+ (for GPU acceleration)
# System RAM: 16GB minimum, 32GB recommended
# GPU RAM: 12GB+ (for Stable Diffusion XL)
# Storage: 100GB+ (for model weights)

# Installation:
# pip install -r requirements-luxury-automation.txt

# For GPU support:
# pip install torch==2.1.1 torchvision==0.16.1 --index-url https://download.pytorch.org/whl/cu118

# External API Keys Required (set in .env):
# - OPENAI_API_KEY (for DALL-E, GPT-4)
# - ANTHROPIC_API_KEY (for Claude)
# - HUGGINGFACE_TOKEN (for private models)
# - JWT_SECRET_KEY (generate: python -c "import secrets; print(secrets.token_urlsafe(32))")
