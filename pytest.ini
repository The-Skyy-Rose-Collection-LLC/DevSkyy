[pytest]
# DevSkyy Enterprise - Pytest Configuration
# Comprehensive testing setup for 90%+ coverage

minversion = 8.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage settings
addopts =
    --verbose
    --strict-markers
    --tb=short
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing:skip-covered
    --cov-report=xml
    --cov-branch
    --cov-fail-under=90
    -ra
    --durations=10

# Markers for test categorization (Enhanced for CI/CD)
markers =
    unit: Unit tests for individual components
    integration: Integration tests for multiple components
    api: API endpoint tests
    e2e: End-to-end tests
    slow: Tests that take >1s to run
    security: Security-related tests
    database: Tests requiring database
    external: Tests that call external APIs
    smoke: Quick smoke tests for CI
    benchmark: Performance benchmark tests
    ml: Machine learning model tests
    auth: Authentication and authorization tests
    agents: AI agent system tests
    gdpr: GDPR compliance tests
    performance: Performance and load tests
    memory: Memory usage tests
    redis: Redis cache tests
    regression: Regression tests
    mock: Tests using mocks and fixtures

# Coverage exclusions
[coverage:run]
omit =
    */tests/*
    */venv/*
    */virtualenv/*
    */.venv/*
    */site-packages/*
    */dist-packages/*
    __pycache__/*
    *.pyc
    */migrations/*
    */alembic/*
    conftest.py
    setup.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    \.\.\.$

[coverage:html]
directory = htmlcov
